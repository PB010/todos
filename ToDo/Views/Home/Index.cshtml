@using ToDo.Core.Models
@model IEnumerable<ToDo.Core.ViewModels.ToDoViewModel>
@{
    ViewBag.Title = "Home Page";
}

@if (!User.Identity.IsAuthenticated)
{
    <h2>Please log in.</h2>

    <p>Please authenticate if you wish to check your ToDo list. </p>
}

else
{
    <h2>My ToDo List</h2>
    <div>
        <div class="custom">
            @Html.ActionLink("New ToDo",
                "Index",
                "ToDo",
                null,
                new { @class = "btn btn-default" })
        </div>

        <div class="pull-right">
            @Html.ActionLink("Time",
                "Time",
                "Home",
                null,
                new { @class = "btn btn-default" })
            @Html.ActionLink(@Model.ElementAt(0).Check,
                "Date",
                "Home",
                null,
                new { @class = "btn btn-default" })
        </div>
    </div>
    

    <br/>
    <br/>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Name", "SortByName", "Home")
                </th>
                <th>Description</th>
                <th>Time</th>
                <th>
                    @Html.ActionLink("Priority", "SortByPriority", "Home")
                </th>
                <th>Created At.</th>
                <th>Updated At</th>
                <th>
                    @Html.ActionLink("Status", "SortByStatus", "Home")
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todo in Model)
            {
                <tr class="@(todo.ToDoStatus == ToDoStatus.Open ? "" : "new-color")">
                    <td>@todo.Name</td>
                    <td>@todo.Description</td>
                    <td>@todo.Time.ToString("dd MMM yyy // HH:mm")</td>
                    <td>@todo.ToDoPriorities.Name</td>
                    <td class="js-created-todo">@todo.CreatedAt</td>
                    <td>@todo.UpdatedAt</td>
                    <td>
                        <button data-id-attr="@todo.Id" class="btn-link js-status-todo">@todo.ToDoStatus</button>
                    </td>
                    <td>
                        @Html.ActionLink("Edit",
                            "Edit",
                            "ToDo",
                            new { id = todo.Id },
                            new { @class = "btn-link" })
                        <button data-id-attr="@todo.Id" class="btn-link js-delete-todo">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section scripts
{
    <script>
        $(document).ready(function() {
            $(".js-delete-todo").on("click", function (e) {
                var deleteButton = $(e.target);
                if (confirm("Are you sure you want to delete this ToDo")) {
                    $.ajax({
                            url: "/api/toDos/" + deleteButton.attr("data-id-attr"),
                            method: "DELETE"
                        })
                        .done(function() {
                            deleteButton.closest('tr').remove();
                        })
                        .fail(function() {
                            alert("fail");
                        });
                }
            });

            
            $(".js-status-todo").on("click", function(e) {
                var statusButton = $(e.target);
                if (!statusButton.parents('tr').hasClass("new-color")) {
                    $.ajax({
                            url: "/api/toDos/" + statusButton.attr("data-id-attr"),
                            method: "PUT"
                        })
                        .done(function() {
                            statusButton
                                .text("Done")
                                .parents('tr')
                                .addClass("new-color");
                        });
                } else {
                    $.ajax({
                            url: "/api/toDos/" + statusButton.attr("data-id-attr"),
                            method: "PUT"
                        })
                        .done(function() {
                            statusButton
                                .text("Open")
                                .parents('tr')
                                .removeClass("new-color");
                        });

                }
                
            });
            //$(".js-toggle-created").on("click",
            //    function(e) {
            //        var toggleButton = $(e.target);
            //        var newTableCell = $(".js-created-todo");
            //        var url = "/api/toDos/orderBy";
            //
            //        $.getJSON(url,
            //            function (data) {
            //                newTableCell.replaceWith('<td>' + data[0].CreatedAt + '</td>');
            //                for (var i = 0; i < data.length; i++) {
            //                    
            //                }
            //                console.log(data);
            //            });
                    //$.ajax({
                    //        url: "/api/toDos/orderBy",
                    //        method: "GET"
                    //    })
                    //    .done(function() {
                    //        
                    //    });
                //});
            //    .fail(function() {
            //        var trHtml = '';
            //        $.each(data, function(i, item) {
            //            trHtml += '<tr><td>' + item.name + '</td><td>' + item.description + '</td></tr>';
            //            td.replaceWith(trHtml);
            //    });
            //});
        });
    </script>
}